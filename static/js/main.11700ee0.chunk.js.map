{"version":3,"sources":["components/elements/Container.jsx","components/elements/ResultContainer.jsx","components/elements/ColumnContainer.jsx","components/elements/RowContainer.jsx","components/elements/Button.jsx","components/elements/LargeButton.jsx","components/elements/ResultsButton.jsx","components/elements/ThemeButton.jsx","components/elements/Setting.jsx","components/Slider.jsx","components/PasswordContainer.jsx","App.js","serviceWorker.js","index.js"],"names":["Container","styled","div","props","theme","containerBG","boxShadow","borderRadius","fontLight","ResultContainer","resultContainer","buttonBorderRadius","ColumnContainer","width","height","backgroundColor","margin","RowContainer","Button","button","buttonBG","LargeButton","ResultsButton","ThemeButton","Setting","SliderStyles","Slider","className","type","min","max","value","count","onChange","e","parentCallback","target","PasswordContainer","useState","password","setPassword","passwordLength","setPasswordLength","useUppercase","setUseUppercase","useNumbers","setUseNumbers","useSymbols","setUseSymbols","textCopied","setTextCopied","generateNewPassword","tempPassword","i","randomChance","getRandomInt","getRandomLower","String","fromCharCode","Math","floor","random","getRandomSymbol","length","ceil","id","onCopy","text","data-tip","data-place","style","color","checked","onClick","theme1","mainBG","theme2","theme3","theme4","App","currentTheme","setTheme","GlobalStyles","createGlobalStyle","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.11700ee0.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\n// ***\r\n// colors from theme variables passed from App.js\r\n// ***\r\n\r\nconst Container = styled.div`\r\n  width: 400px;\r\n  height: 500px;\r\n  padding: 20px;\r\n  max-width: 100%;\r\n  background-color: ${props => props.theme.containerBG};\r\n  box-shadow: 0px 2px 20px ${props => props.theme.boxShadow};\r\n  border-radius: ${props => props.theme.borderRadius};\r\n\r\n  /* position center of screen\r\n  position: absolute;\r\n  left: 50%;\r\n  top: 50%;\r\n  transform: translate(-50%, -50%);\r\n  */\r\n  position: relative;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n\r\n  transition: all 0.5s ease;\r\n\r\n  @import url(\"https://fonts.googleapis.com/css?family=Nunito:400,700&display=swap\");\r\n  font-family: \"Nunito\", sans-serif;\r\n  color: ${props => props.theme.fontLight};\r\n\r\n  /* Remove the \"card look\"/shadow for mobile */\r\n  @media only screen and (max-width: 600px) {\r\n    box-shadow: none;\r\n  }\r\n\r\n  h2 {\r\n    margin: 10px 0 20px;\r\n  }\r\n`;\r\n\r\nexport default Container;\r\n","import styled from \"styled-components\";\r\n\r\n// ***\r\n// colors from theme variables passed from App.js\r\n// ***\r\n\r\nconst ResultContainer = styled.div`\r\n  background-color: ${props => props.theme.resultContainer};\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  position: relative;\r\n  font-size: 20px;\r\n  letter-spacing: 1px;\r\n  padding: 12px 10px;\r\n  height: 50px;\r\n  width: 100%;\r\n  border-radius: ${props => props.theme.buttonBorderRadius};\r\n\r\n  transition: all 0.5s ease;\r\n\r\n  .result-container #result {\r\n    word-wrap: break-word;\r\n    width: calc(100% - 40px);\r\n    max-width: calc(100% - 40px);\r\n  }\r\n`;\r\n\r\nexport default ResultContainer;\r\n","import styled from \"styled-components\";\r\n\r\n// ***\r\n// colors from theme variables passed from App.js\r\n// ***\r\n\r\nconst ColumnContainer = styled.div`\r\n  width: ${props => props.width};\r\n  height: ${props => props.height};\r\n  background-color: ${props => props.backgroundColor};\r\n\r\n  position: relative;\r\n  margin: ${props => props.margin};\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default ColumnContainer;\r\n","import styled from \"styled-components\";\r\n\r\n// ***\r\n// colors from theme variables passed from App.js\r\n// ***\r\n\r\nconst RowContainer = styled.div`\r\n  width: ${props => props.width};\r\n  height: ${props => props.height};\r\n  background-color: ${props => props.backgroundColor};\r\n\r\n  position: relative;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default RowContainer;\r\n","import styled from \"styled-components\";\r\n\r\n// ***\r\n// colors from theme variables passed from App.js\r\n// ***\r\n\r\nconst Button = styled.button`\r\n  border: none;\r\n  color: ${props => props.theme.fontLight};\r\n  cursor: pointer;\r\n  font-size: 18px;\r\n  padding: 8px 12px;\r\n  background-color: ${props => props.theme.buttonBG};\r\n  border-radius: ${props => props.theme.buttonBorderRadius};\r\n\r\n  transition: all 0.5s ease;\r\n`;\r\n\r\nexport default Button;\r\n","import styled from \"styled-components\";\r\nimport Button from \"./Button\";\r\n\r\n// ***\r\n// colors from theme variables passed from App.js\r\n// ***\r\n\r\nconst LargeButton = styled(Button)`\r\n  display: block;\r\n  width: 90%;\r\n  height: 50px;\r\n  text-transform: uppercase;\r\n  position: absolute;\r\n  bottom: 10px;\r\n`;\r\n\r\nexport default LargeButton;\r\n","import styled from \"styled-components\";\r\nimport Button from \"./Button\";\r\n\r\nconst ResultsButton = styled(Button)`\r\n  font-size: 20px;\r\n  position: absolute;\r\n  top: 5px;\r\n  right: 5px;\r\n  height: 40px;\r\n  width: 40px;\r\n`;\r\n\r\nexport default ResultsButton;\r\n","import styled from \"styled-components\";\r\n\r\n// ***\r\n// colors from theme variables passed from App.js\r\n// ***\r\n\r\nconst ThemeButton = styled.button`\r\n  width: 50px;\r\n  height: 50px;\r\n  color: white;\r\n  cursor: pointer;\r\n  font-size: 18px;\r\n  padding: 8px 12px;\r\n  margin: 12px;\r\n  background: rgb(33, 36, 61);\r\n  background: linear-gradient(\r\n    0deg,\r\n    ${props => props.theme.containerBG} 0%,\r\n    ${props => props.theme.containerBG} 33%,\r\n    ${props => props.theme.buttonBG} 34%,\r\n    ${props => props.theme.buttonBG} 66%,\r\n    ${props => props.theme.resultContainer} 67%,\r\n    ${props => props.theme.resultContainer} 100%\r\n  );\r\n\r\n  border-style: solid;\r\n  border-color: #ffff;\r\n  border-radius: 50%;\r\n`;\r\n\r\nexport default ThemeButton;\r\n","import styled from \"styled-components\";\r\n\r\nconst Setting = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  font-size: 1.2rem;\r\n  margin-top: 1rem;\r\n\r\n  input[type=\"checkbox\"] {\r\n    margin-left: 1rem;\r\n    /* Double-sized Checkboxes \r\n    -ms-transform: scale(2);\r\n    -moz-transform: scale(2);\r\n    -webkit-transform: scale(2);\r\n    -o-transform: scale(2); \r\n    transform: scale(2);\r\n    */\r\n    padding: 10px;\r\n\r\n    -webkit-appearance: none;\r\n    -moz-appearance: none;\r\n    -o-appearance: none;\r\n    appearance: none;\r\n\r\n    border: 1px solid #fff;\r\n    border-radius: ${props => props.theme.buttonBorderRadius};\r\n    outline: none;\r\n    transition-duration: 0.3s;\r\n    background-color: ${props => props.theme.resultContainer};\r\n\r\n    :checked {\r\n      background-color: ${props => props.theme.buttonBG};\r\n    }\r\n\r\n    :active {\r\n      border: 2px solid ${props => props.theme.buttonBG};\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Setting;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst SliderStyles = styled.div`\r\n  min-width:100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content:center;\r\n  margin-top: 1rem;\r\n  font-size:1.2rem;\r\n\r\n  label {\r\n    margin-right: 0rem;\r\n    flex: 2;\r\n    text-align:center;\r\n  }\r\n  p {\r\n    margin-left: 0.6rem;\r\n    flex:1;\r\n    text-align:center;\r\n  }\r\n\r\n  input[type=\"range\"] {\r\n    -webkit-appearance: none;\r\n    margin: 18px 0;\r\n    width: 100%;\r\n    flex:5;\r\n  }\r\n  input[type=\"range\"]:focus {\r\n    outline: none;\r\n  }\r\n  input[type=\"range\"]::-webkit-slider-runnable-track {\r\n    width: 100%;\r\n    height: 8.4px;\r\n    cursor: pointer;\r\n    background: ${props => props.theme.resultContainer};\r\n    border-radius: 1.3px;\r\n    border: 0.2px solid #fff;\r\n  }\r\n  input[type=\"range\"]::-webkit-slider-thumb {\r\n    border: 1px solid #ffffff;\r\n    height: 36px;\r\n    width: 16px;\r\n    border-radius: 3px;\r\n    background: ${props => props.theme.buttonBG};\r\n    cursor: pointer;\r\n    -webkit-appearance: none;\r\n    margin-top: -14px;\r\n  }\r\n  input[type=\"range\"]:focus::-webkit-slider-runnable-track {\r\n    background: ${props => props.theme.resultContainer};\r\n    /**${props => props.theme.buttonBG}; */\r\n  }\r\n  input[type=\"range\"]::-moz-range-track {\r\n    width: 100%;\r\n    height: 8.4px;\r\n    cursor: pointer;\r\n    background: ${props => props.theme.resultContainer};\r\n    border-radius: 1.3px;\r\n    border: 0.2px solid #fff;\r\n  }\r\n  input[type=\"range\"]::-moz-range-thumb {\r\n    border: 1px solid #fff;\r\n    height: 36px;\r\n    width: 16px;\r\n    border-radius: 3px;\r\n    background: #ffffff;\r\n    cursor: pointer;\r\n  }\r\n  input[type=\"range\"]::-ms-track {\r\n    width: 100%;\r\n    height: 8.4px;\r\n    cursor: pointer;\r\n    background: transparent;\r\n    border-color: transparent;\r\n    border-width: 16px 0;\r\n    color: transparent;\r\n  }\r\n  input[type=\"range\"]::-ms-fill-lower {\r\n    background: ${props => props.theme.resultContainer};\r\n    border: 0.2px solid #fff;\r\n    border-radius: 2.6px;\r\n  }\r\n  input[type=\"range\"]::-ms-fill-upper {\r\n    background: ${props => props.theme.resultContainer};\r\n    border: 0.2px solid #fff;\r\n    border-radius: 2.6px;\r\n  }\r\n  input[type=\"range\"]::-ms-thumb {\r\n    border: 1px solid #fff;\r\n    height: 36px;\r\n    width: 16px;\r\n    border-radius: 3px;\r\n    background: #ffffff;\r\n    cursor: pointer;\r\n  }\r\n  input[type=\"range\"]:focus::-ms-fill-lower {\r\n    background: ${props => props.theme.resultContainer};\r\n  }\r\n  input[type=\"range\"]:focus::-ms-fill-upper {\r\n    background: ${props => props.theme.resultContainer};\r\n  }\r\n`;\r\n\r\nexport default function Slider(props) {\r\n  //const [passwordLength, setPasswordLength] = useState(20);\r\n\r\n  return (\r\n    <SliderStyles>\r\n      <label>Length</label>\r\n      <input\r\n        className=\"slider\"\r\n        type=\"range\"\r\n        min=\"4\"\r\n        max=\"20\"\r\n        value={props.count}\r\n        onChange={e => props.parentCallback(e.target.value)}\r\n      />\r\n      <p>{props.count}</p>\r\n    </SliderStyles>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n// import elements\r\nimport { Container, ResultContainer, ColumnContainer } from \"./elements/\";\r\nimport { LargeButton, ResultsButton } from \"./elements/\";\r\nimport { Setting } from \"./elements/\";\r\n// import components\r\nimport Slider from \"./Slider\";\r\n// import 3rd party\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\n\r\nexport default function PasswordContainer() {\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const [passwordLength, setPasswordLength] = useState(20);\r\n\r\n  const [useUppercase, setUseUppercase] = useState(false);\r\n  const handleClickUppercase = () => setUseUppercase(!useUppercase);\r\n\r\n  const [useNumbers, setUseNumbers] = useState(false);\r\n  const handleClickNumbers = () => setUseNumbers(!useNumbers);\r\n\r\n  const [useSymbols, setUseSymbols] = useState(false);\r\n  const handleClickSymbols = () => setUseSymbols(!useSymbols);\r\n\r\n  const [textCopied, setTextCopied] = useState(false);\r\n\r\n  // Test handling change for input\r\n\r\n  function generateNewPassword() {\r\n    let tempPassword = \"\";\r\n    for (let i = 0; i < passwordLength; i++) {\r\n      // Check which character to return\r\n      let randomChance = getRandomInt(0, 4);\r\n      if (randomChance <= 0) {\r\n        tempPassword += getRandomLower();\r\n      }\r\n      // if bools are not set, default to lowercase letter\r\n      else if (randomChance === 1) {\r\n        useUppercase\r\n          ? (tempPassword += getRandomUpper())\r\n          : (tempPassword += getRandomLower());\r\n      } else if (randomChance === 2) {\r\n        useNumbers\r\n          ? (tempPassword += getRandomNumber())\r\n          : (tempPassword += getRandomLower());\r\n      } else if (randomChance >= 3) {\r\n        useSymbols\r\n          ? (tempPassword += getRandomSymbol())\r\n          : (tempPassword += getRandomLower());\r\n      }\r\n    }\r\n    setPassword(tempPassword);\r\n\r\n    // reset the text copied\r\n    setTextCopied(false);\r\n  }\r\n\r\n  function getRandomLower() {\r\n    return String.fromCharCode(Math.floor(Math.random() * 26) + 97);\r\n  }\r\n\r\n  function getRandomUpper() {\r\n    return String.fromCharCode(Math.floor(Math.random() * 26) + 65);\r\n  }\r\n\r\n  function getRandomNumber() {\r\n    return +String.fromCharCode(Math.floor(Math.random() * 10) + 48);\r\n  }\r\n\r\n  function getRandomSymbol() {\r\n    const symbols = \"!@#$%^&*(){}[]=<>/,.\";\r\n    return symbols[Math.floor(Math.random() * symbols.length)];\r\n  }\r\n  function getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min)) + min; //The maximum is exclusive and the minimum is inclusive\r\n  }\r\n\r\n  // Check if no password is there- create one\r\n  if (password.length <= 0) {\r\n    generateNewPassword();\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <h2>Password Generator</h2>\r\n      <ResultContainer>\r\n        <span id=\"result\">{password}</span>\r\n        <CopyToClipboard onCopy={setTextCopied} text={password}>\r\n          <ResultsButton data-tip=\"Copy to Clipboard\" data-place=\"right\">\r\n            <i className=\"far fa-clipboard\"></i>\r\n            <ReactTooltip />\r\n          </ResultsButton>\r\n        </CopyToClipboard>\r\n      </ResultContainer>\r\n      {textCopied ? <span style={{ color: \"red\" }}>Copied.</span> : null}\r\n      <ColumnContainer\r\n        width={\"100%\"}\r\n        height={\"280px\"}\r\n        backgroundColor={\"none\"}\r\n        margin={\"10px\"}\r\n      >\r\n        <Slider\r\n          count={passwordLength}\r\n          parentCallback={setPasswordLength}\r\n          password={password}\r\n        />\r\n        <Setting>\r\n          <label>Include uppercase letters</label>\r\n          <input\r\n            onChange={handleClickUppercase}\r\n            checked={useUppercase}\r\n            type=\"checkbox\"\r\n          />\r\n        </Setting>\r\n        <Setting>\r\n          <label>Include numbers</label>\r\n          <input\r\n            onChange={handleClickNumbers}\r\n            checked={useNumbers}\r\n            type=\"checkbox\"\r\n          />\r\n        </Setting>\r\n        <Setting>\r\n          <label>Include symbols</label>\r\n          <input\r\n            onChange={handleClickSymbols}\r\n            checked={useSymbols}\r\n            type=\"checkbox\"\r\n          />\r\n        </Setting>\r\n      </ColumnContainer>\r\n      <LargeButton onClick={generateNewPassword}>Generate password</LargeButton>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport { createGlobalStyle, ThemeProvider } from \"styled-components\";\n\nimport PasswordContainer from \"./components/PasswordContainer\";\nimport { RowContainer } from \"./components/elements\";\nimport { ThemeButton } from \"./components/elements\";\n\nconst theme1 = {\n  mainBG: \"#9ACEFF\",\n  containerBG: \"#617BE3\",\n  fontLight: \"#ffff\",\n  buttonBG: \"#550A46\",\n  resultContainer: \"#4A69BB\",\n  borderRadius: \"0px\",\n  buttonBorderRadius: \"0px\",\n  boxShadow: \"rgba(0, 0, 0, 0.5)\"\n};\n\nconst theme2 = {\n  mainBG: \"#FCF8E8\",\n  containerBG: \"#5B8C85\",\n  fontLight: \"#ffff\",\n  buttonBG: \"#ECCE6D\",\n  resultContainer: \"#434E52\",\n  borderRadius: \"6px\",\n  buttonBorderRadius: \"6px\",\n  boxShadow: \"rgba(0, 0, 0, 0.5)\"\n};\nconst theme3 = {\n  mainBG: \"#323551\",\n  containerBG: \"#21243D\",\n  fontLight: \"#ffff\",\n  buttonBG: \"#FF7C7C\",\n  resultContainer: \"#4A518A\",\n  borderRadius: \"6px\",\n  buttonBorderRadius: \"6px\",\n  boxShadow: \"rgba(255, 255, 255, 0.5)\"\n};\nconst theme4 = {\n  mainBG: \"#C0E0E0\",\n  containerBG: \"#F0134D\",\n  fontLight: \"#ffff\",\n  buttonBG: \"#7BC2C3\",\n  resultContainer: \"#700925\",\n  borderRadius: \"6px\",\n  buttonBorderRadius: \"50vh\",\n  boxShadow: \"rgba(0, 0, 0, 0.5)\"\n};\n\nfunction App() {\n  const [currentTheme, setTheme] = useState(theme3);\n\n  const GlobalStyles = createGlobalStyle`\n  *{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n  body {\n    background-color: ${currentTheme.mainBG};\n    position: relative;\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    padding:5% 0;\n    transition: all 0.5s ease;\n  }\n\n  @media only screen and (max-width: 600px) {\n  body {\n    background-color: ${currentTheme.containerBG};;\n  }\n}\n`;\n\n  return (\n    <ThemeProvider theme={currentTheme}>\n      <div className=\"App\">\n        <GlobalStyles />\n        <PasswordContainer />\n\n        {/* Theme Buttons*/}\n        <RowContainer width={\"400px\"} height={\"100px\"} backgroundColor={\"none\"}>\n          <ThemeButton\n            theme={theme1}\n            onClick={() => setTheme(theme1)}\n          ></ThemeButton>\n          <ThemeButton\n            theme={theme2}\n            onClick={() => setTheme(theme2)}\n          ></ThemeButton>\n          <ThemeButton\n            theme={theme3}\n            onClick={() => setTheme(theme3)}\n          ></ThemeButton>\n          <ThemeButton\n            theme={theme4}\n            onClick={() => setTheme(theme4)}\n          ></ThemeButton>\n        </RowContainer>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}